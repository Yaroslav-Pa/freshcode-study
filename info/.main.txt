
  Конкатинація - операція ("склеювання") зрошування (+ або array.concat())


(functions.txt)
  function expresion - функціональний вираз
    const functionOne = function () {...}

  function declaration - об'ява функції
    function functionTwo(){}

  arrow function - стрілкова функція 
    () => expression

(objects.txt)
  насправді усі об'єкти це посилання на комірку пам'яті, тому:
  return obj1 === obj1 //true
  return obj1 === obj2 // fasle
  тому що obj1, наприклад, буде посланням на клітинку 5000, але obj2 є наприклад посилання на 6500

  !!! Але якщо зробити: 
  const obj3 = obj1 =>
    return obj1 === obj3 // true
  !!! тому що тепер obj3 дорівнює посиланню на комірку 5000, як й obj1, тож якщо змінити obj1 або obj3 будуть змінені вони вдвох (бо зміни будуть записані у спільну комірку)

(construct.txt)
  альтернативи створення об'єктів
   let hamster1 = {};  //літеральний
   let hamster2 = Object(); // ?
   let hamster3 = new Object(); // конструктор


(array.txt)
  Масив це різновив об'єкту що заповнений однотипно


(array-2.txt)
  мутуючі та не мутуючі функції 

  //mutable
  мутуючі функції - функції що змінюють об'єкт (з якого беруть данні)
  
  //immutable
  не мутуючі функції - що не змінюють об'єкт з якого беруть данні


  callback функція - це функція що запускається іншою функцією


