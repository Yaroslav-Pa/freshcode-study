Перше-друге заняття Git

init—
git init 
git add <.> 

git commit - створення коміту

delete—
git rm <> -> git commit - видалення файлу з гіта + локально
*git rm —cached <> -видалення з гіта, але не локально  

redo—
git commit —amend -заміна останього локал коміта
git restore <./id>\<файл>-відновлення НЕ проіндексованих файлів до останнього коміту\ відновлення раніше запамятованого гітом файлу
*git restore —staget <> -відкат stage`у вибраного файлу
git reset HEAD~1 -повертає усе на * комітів назад від HEAD  

info—
git status - що бачить, що може робити та статус
git log - показує усі зроблені коміти
*git reflog -показує усе (локалні коміти та їх заміни амендом)
git diff - показує різницю у проідифікованих файлі 

clone—
git clone <url>


Трете-четверте заняття Git

info—
git log --oneline - скорочений список

init—
git remote <origin> add <url> - додає папку гіт 
git pull <url> <branch> - скачує останнє оновлення гілки

return—
git revert <id> -робить новий коміт з поперднього, відміняючи усе що було зроблено

branch—
git branch - показує усі гілки
git branch <name> - створює гілку
git checkout *<id> - переносить HEAD на потрібний коміт
git switch <name>
git branch -D <name> - видалити гілку локально
git push origin -D <nameBrenchToDelete> - видалити гілку у гіті
git branch -M <name> - переіменувати гілку

merge +error—
git merge <nameГілкиПопереду> - НЕАD має бути на ГілціПозаду
git rebase <nameГількиПозаду> - HEAD має бути на ГільціПопереду ++ git merge <nameГілкиПопереду> (стоя на ГільціПозаду)
git merge —abort - просто відміна мерджа